Wormhole X-Treme 1.0.3 (2025-09-05)
------------------------------------
Hotfix: legacy 2D shape material parsing (STATIONARY_WATER / STATIONARY_LAVA / PORTAL / GLOWING_REDSTONE_ORE) now maps to modern enums (WATER, LAVA, NETHER_PORTAL, GLOWSTONE) preventing startup IllegalArgumentException in `StargateShape`.

Changes:
 - Added resolveMaterial() to `StargateShape` (2D shapes) mirroring logic already present for 3D shapes.
 - Fallback defaults to WATER with warning log if an unknown material name is encountered.
 - Replaced deprecated STATIONARY_WATER entries in bundled shape files with WATER and updated comment suggestions to modern names (WATER, LAVA, NETHER_PORTAL, AIR).

Upgrade Guidance:
 Replace 1.0.2 jar with 1.0.3 if you encountered: "No enum constant org.bukkit.Material.STATIONARY_WATER" while loading shape files.

No data or config changes.

Wormhole X-Treme 1.0.2 (2025-09-05)
Wormhole X-Treme 1.0.4 (2025-09-05)
------------------------------------
Maintenance & visibility update.

Changes:
 - Added INFO-level summary listing loaded shape names (previously only visible at CONFIG level) to aid administrators diagnosing missing/incorrect shapes.
 - Bundled default 2D shape templates on first run (prefixed with 2d_) when no shape files exist.
 - Replaced deprecated STATIONARY_WATER values in bundled shapes with WATER (already handled at runtime but now removed from distribution).
 - Added mockito-inline test dependency to support future mocking adjustments.

No data migrations. Safe drop-in over 1.0.3.

Upgrade Guidance: Replace jar; verify startup log now shows: "Loaded N stargate shape(s): [...]".

Stability & completion pass for the modernization effort. Focus on database pooling reliability, listener/event API migration, legacy material & world handling, and permissions/config clean up.
Highlights:
 - Fixed database pool startup (HikariCP + embedded HSQLDB) by adding explicit driver dependency and disabling shade minimization so reflective classes (DataSource, SLF4J providers) are preserved.
 - Removed SLF4J relocation; simple logger binding now discovered without fallback NOP warning.
 - Converted remaining legacy Bukkit listener subclasses (BlockListener, ServerListener, VehicleListener) to modern Bukkit `Listener` + `@EventHandler` annotations.
 - Replaced deprecated numeric block ID methods (`getTypeId()`, `setTypeId*`) with Material / BlockData usage across gate activation, sign, lever, redstone, and portal fill logic.
 - Added backward-compatible material resolution for legacy shape files (maps STATIONARY_WATER/LAVA -> WATER/LAVA) preventing shape parse failures.
 - Normalized portal, iris, structure & light material defaults to modern enum constants (e.g. WATER instead of STATIONARY_WATER, NETHER_PORTAL instead of PORTAL when custom-set).
 - Simplified / updated command validation messages for customized materials (removed references to removed materials like GLOWING_REDSTONE_ORE, STATIONARY_*).
 - Hardened `StargateHelper` & `Stargate` serialization/deserialization: removed obsolete custom material ID persistence (writes -1 placeholders) and legacy world numeric ID usage.
 - Added lightweight internal stubs: `WorldHandler` & `ConfigMigrationUtil` to decouple from absent companion plugins and enable future migration logic.
 - Permissions refactor: introduced `PermissionUtils` convenience methods, added minimal compatibility shim in `PermissionsManager` for modern WXPermissions integration; aligned config property names (BUILT_IN_PERMISSIONS_, PERMISSIONS_SUPPORT_DISABLE, SIMPLE_PERMISSIONS, etc.).
 - Removed hard dependencies / reflection on outdated Help & Permissions plugins; replaced with graceful no-op integration classes (`HelpSupport`, `PermissionsSupport`).
 - Added defensive null / optional handling in DB manager and world loading; uses `WorldCreator` when worlds must be created.
 - Internal gate network & manager cleanups (direct value-based retrieval, safer removals, simplified collection returns).
 - Added suppression annotations only where still relying on deprecated APIs temporarily (e.g., sign line setting).

Bug Fixes:
 - Resolved HikariCP failure to acquire driver class (ClassNotFound for `org.hsqldb.jdbc.JDBCDataSource`).
 - Prevented reflective class elimination by disabling shade minimization (would strip JDBC & SLF4J provider classes).
 - Fixed minecart teleport event & sign/lever placement for modern API (use `spawn(target, Minecart.class)`, `addPassenger`, BlockData modifications, etc.).
 - Corrected redstone and vehicle event method names and registrations (no longer silently ignored by Bukkit 1.20+/1.21 servers).
 - Eliminated legacy STATIONARY_* material enum lookups causing IllegalArgumentException during shape parsing.
 - Cleaned up inconsistent permission node checks referencing removed config flags (e.g. PERMISSIONS_DISABLE vs PERMISSIONS_SUPPORT_DISABLE).

Breaking / Behavioral Notes:
 - Custom gate material persistence for individual gates is currently disabled (materials are not restored from older saved numeric IDs); legacy gates still function but revert to shape or default materials. Future reimplementation may use Material names.
 - World numeric IDs are ignored on load; world resolution is by name (aligns with modern Bukkit API). If a world is missing it will be (optionally) created; ensure backups before first 1.0.x startup.
 - Some verbose / legacy log lines trimmed or reworded; scripts parsing console output may need adjustment.

Upgrade Guidance:
 - Upgrading from 1.0.1: Replace the jar with 1.0.2. No config edits required. This resolves startup failures related to JDBC DataSource / shaded jar minimization.
 - Upgrading from pre-1.0.0 legacy releases: Back up your old plugin folder & database first. Deploy 1.0.2, allow it to start once, then validate gates. Legacy custom per-gate material selections won't be restored (see Breaking Notes). Shape files with STATIONARY_* values will load automatically via mapping.
 - If you previously added SLF4J bindings manually, remove them; the shaded simple binding now loads correctly.

Next (Planned / Consider):
 - Optional: Bump `plugin.yml` api-version to 1.21 (currently 1.20) if target runtime stays on 1.21+.
 - Reintroduce custom gate material persistence using Material names.
 - Adventure text component migration for sign updates (remove deprecated setLine usage).
 - Consolidate legacy DB manager and new repository layer.
 - Optional Vault soft integration improvements once Vault is installed (currently logs only a warning if absent).

Deploy 1.0.2 if 1.0.1 failed to enable due to HikariCP / JDBCDataSource errors or if you need the finalized listener & material modernization.

Wormhole X-Treme 1.0.1 (2025-09-05)
-----------------------------------
Startup stability & packaging cleanup.

Fixes / Changes:
 - Fixed NullPointerException during onLoad by initializing plugin singleton, logger, and scheduler earlier.
 - Functionalized legacy static setter stubs (setThisPlugin, setLog, setScheduler, setPrettyLogLevel).
 - Added defensive try/catch blocks around config, DB update, shape and permissions preload steps.
 - Clarified shading strategy; main artifact remains standard jar (no classifier) with relocated embedded libs.

Notes:
If you previously deployed 1.0.0 and saw an immediate startup NPE, replace the jar with 1.0.1. No config or data changes required.

Wormhole X-Treme 1.0.0 (2025-09-05)
-----------------------------------
Modernization release targeting Spigot 1.20.4.

Highlights:
 - Migrated all legacy numeric block ID & data usage to Material + BlockData.
 - Updated sign / lever handling (central helpers) and wall sign placement.
 - Integrated ConfigMe (`config.yml`) replacing legacy settings file.
 - Added Vault integration (permissions/chat) with simple & built-in fallback modes.
 - Refactored gate shape detection; removed deprecated STATIONARY_* materials.
 - Simplified DB layer (world numeric IDs removed, world loading via WorldCreator).
 - Cleaned unused legacy serialization code and schema constants.
 - Maintained deprecated Sign#setLine calls (suppressed) â€“ future migration planned to Adventure API.
 - Added modern README.md and updated plugin.yml to use ${project.version}.
 - General code cleanup: null checks, listener API adjustments, removal of dead methods.

Notes:
Deprecated sign APIs remain temporarily; no gameplay regression expected. Back up old data before deploying.

Changes 0.854 (5/17/11 @ 16:13 PST):

- Updated chunk (un)loading to happen when gate (de)activates and when dial lever state
  changes happen. 

- Fixed iris levers not being added properly with 2d gates. (Oops, guess that code WAS needed)

- Fixed IndexOutOfBoundsException on 3d gate shapes without lighting blocks.

- Hamfisted fix for signs not updating. Now we nuke the sign and build it from scratch every
  time a gate sign is toggled. Causes a flash, but... who cares. It works EVERY time now. 

Changes 0.853 (5/13/11 @ 23:05 PST):

- Fix for /dial gates breaking when a user who doesn't have dialer permission hit the lever.

- Switched to getTypeId() from getType(), hopefully this works around the getType() == Air bug
  that might be lingering. (doubt it :| )

Changes 0.852 (5/12/11 @ 07:55 PST):

- Added support for upcoming Permissions 3.0.x release.

- Fixed a NPE in 2d shape code dealing with light block positions.

- Added soft dependencies to plugin.yml.

- Minor log format changes for readability.

Changes 0.851 (5/10/11 @ 21:56 PST):

- Complete revamp of how we handle permissions checks. Lots more case statements, lots less
  if/else if. Much better. This is what enums are for.
  
- Added new gate use cooldowns. This feature will only work on complex permissions enabled 
  servers. There are three groups you can assign a player to; 'wormhole.cooldown.groupone',
  'wormhole.cooldown.grouptwo', and 'wormhole.cooldown.groupthree'. If you have an '*' on any
  user/group, remember to '-wormhole.cooldown.groupone' etc. There is a new command to
  enable, disable, and modify cooldowns; 'wormhole cooldown [true|false|group] <time>', valid
  groups being 'one', 'two', and 'three', valid time being between 15 and 3600 seconds. There 
  are also Settings.txt options for all of these new settings. Cooldowns are set when a player 
  enters a stargate, not when they /dial. Cooldowns are removed via timer events, and even if
  the timer event fails, we do a fall back calculation when a player enters a stargate, and gets
  denied access.
  
- Added new gate build count restrictions. This feature will only work on complex permissions
  enabled servers. There are three groups you can assign a player to; 'wormhole.build.groupone',
  'wormhole.build.grouptwo', and 'wormhole.build.groupthree'. If you have an '*' on any
  user/group, remember to '-wormhole.build.groupone' etc. There is a new command to enable,
  disable, and modify build count restrictions; 'wormhole restrict [true|false|group] <count>',
  valid groups being 'one', 'two', and 'three', valid count being between 1 and 200. There are 
  also Settings.txt options for all of these new settings.

- Updated the stargate sign dial sign reset code to be more reliable at causing the client to
  notice update changes.
  
- Added a thrown exception during stargate 3d shape parsing if the shape doesn't have an exit
  point. We depend on this location for pretty much everything. If it isn't there, really bad
  bad bad things happen.

- Now we have more than just Standard as our default shape. We extract Standard, 
  StandardSignDial, Minimal, and MinimalSignDial to the gateShape folder if it is missing shapes.
  
- Now we don't toggle stargate signs when we start. 

Changes 0.850 (5/5/11 @ 16:15 PST):

- iConomy support removed. I will not depend on plugins that decide to change their
  package name 5 major versions in and basically give everyone who depended on the 
  package location the middle finger.
  
- 3d Gate shapes now implemented.

- Custom gate settings now in place (read: per gate material settings).
  This included the re-addition of the portalmaterial and irismaterial commands.
  lightmaterial, redstone, wooshdepth, and custom commands newly added.
  
- Massive internal overhaul, refactorings, cleanups, general goodness and bugfixes.

- Added support for Wormhole X-Treme Worlds. This allows Wormhole X-Treme to offload its
  chunk loading and world loading to WXW, for worlds that exist in WXW. Requires user to 
  change Settings.txt option WORLDS_SUPPORT_ENABLED from false to true. This option requires
  Wormhole X-Treme Worlds v0.5 to be installed, and preferably configured for every existing
  world populated with stargates. If this option is set to true but WXW is not v0.5 (or not
  installed), WX will not load its stargates from its database.

- Removed many superfluous chunk load requests. Added graceful chunk unload queue when we
  are done with a chunk.
  
- Bumped supported version of permissions to include the 2.7 tree.

- Updated help text for new/modified commands.

- Added backwards compatibility, for those users who just don't want to upgrade to 3d shapes.

- Added loads of failsafe settings, for when users don't have any shapes installed, but have
  stargates already.

- wxidc now only works on non-sign powered gates which have iris activation blocks set.

Changes 0.833 (4/9/11 @ 23:36 PST):

- Fixed iConomy double(or many many more) charging issue. Tried to do something awesome,
  turned out to be a bad idea. We'll revisit these kind of changes when 3d shapes are in
  and I can do some major refactoring and method merges/splits.
  
- Bumped supported version of permissions to include the 2.6 tree.

- Merged some of the sign click schedule related methods. Should make sign click messages
  more reliable.

Changes 0.832 (4/5/11 @ 15:04 PST):

- Fixed NPE during database creation. Whoops, missing null-checks. 

Changes 0.831 (4/4/11 @ 23:13 PST):

- Fixed erroneous messages sent when a plugin is attached to already and WXT receives 
  a plugin event for it. Cosmetic bug, fixed.
  
  
Changes 0.830 (4/4/11 @ 01:12 PST):

- Water now will not flow over Stargate anythings. No more broken levers and magic 
  blocks of water floating in their place.

- Buckets now will no longer work with stargate anythings. No free water and lava.

- Minor optimizations and code cleanups.

- PORTAL_MATERIAL, IRIS_MATERIAL, STARGATE_MATERIAL, ACTIVE_MATERIAL are all part of gate shape now.
    - All configuration values associated with these are gone now.
    - Gate shapes without these default to 
      PORTAL_MATERIAL = STATIONARY_WATER
      IRIS_MATERIAL = STONE
      STARGATE_MATERIAL = OBSIDIAN
      ACTIVE_MATERIAL = GLOWSTONE
    - Updated default gate shapes that come in the zip to include these new values.
    - See gate shape files for more details
    - Known bug: If you teleport from a gate with portal type lava, to a gate
      that is NOT lava, you will be burned once you reach the other side.
       
- Removed version 1 DB conversion because new design doesn't allow for it anymore. 
    - For users this means if you are upgrading from version 0.3 or less to this
      version you will need to remake your gates.
      
- Fixed NPE in onPlayerInteract caused by event not reporting the block the interact
  event was associated with. 
  
- Logic tweak in the find safe teleport code. Should be *safererer*

- Sign powered stargates now can only target other sign powered stargates. 

- Fixed so that when coming from a lava portal stargate to a non-lava portal stargate
  fire damage is canceled still. No more nasty fire after a teleport.
  
- Added the logic back in to stop people from randomly teleporting when next to the lever
  of an active gate. The side effect is, when block.getType() fails, gates don't work.
  Its one or the other.
  
- Fixed /wxcomplete permission deny issue with stargates on public networks.

- Added ICONOMY_OWNER_EXEMPT option to Settings.txt with a default value of true. When
  true this option disables the charging of gate owners for using their own gates.

Changes 0.821 (3/30/11 @ 17:42 PST):

- Update version of iConomy we build against and test for.

- Fix NPE in old non-shape based gates.

- Added custom StargateTeleportEvent for MinecartMania as we nuke the minecarts before 
  teleporting them.

- Refactored package to com.wormhole_xtreme.wormhole in anticipation of adding more 
  stargate related projects.
  
Changes 0.820 (3/29/11 @ 17:31 PST):

- Initial support for CraftBukkit Build 600.

- Got rid of the stupid double error that people got by not reading the readme. Now when
  we parse settings.txt, if the value is integer for the iconomy settings, we change it
  to a double by simply dropping a .0 at the end of it. Problem solved.
  
- Lots of optimizations to the distance finding method we were using. Also fixes to the 
  gate shape parsing code. (Thanks lirelent)
  
- Overhaul of the way we handle permissions internally. More unified approach to the
  actual permissions checks. 
  
- Gate block protection should now be compatible with plugins like mcMMO. "Should" being
  the operating word.

- Levers now properly move when used and toggle on and off when stargate
  and iris are activated.
  
- All Permissions deny events now log at Level.FINE. Got permissions problems with WXT?
  Now see what is happening.
  
- Optimized fire protection. Now we use timer events that go off 2 seconds after gates 
  close. This way we don't have to listen for fire type events 24/7. :)
  
- Fixed teleportation dropping people into very unsafe locations. Now we scan for safe
  place to drop people, if we can't find one we drop the player in front of the DHD. 
  This will also FIX wormholes by setting the stored teleport location to the new clean
  and safe location. 
  
- We now support using the help plugin along with WXT. 

- We now have settings.txt options to hard disable support of iConomy, Permissions, and
  the help plugin. No longer do we log a warning when unable to find the plugin we depend
  on. We log at INFO. :P
  
- Buttons are no longer really used. If a button exists on a stargate, it will be replaced
  with a shiny new lever on the first use. 

- Lava stargates are *really* safe to use now. For trees even.

- A whole host of debugging information has been added at Level.FINE. If you can trigger
  a bug reliably, set yourself to fine and provide the server.log details surrounding the
  bug. Not recomended for production servers as well... its exceissive.
  
- the '/wormhole regenerate' command is partially added. Will regenerate missing activation
  and iris levers.
  
- Minecarts work across chunks and worlds now! If you run into a location where it doesn't work,
  use the wormhole in both directions to correct the wormhole, then try again. :)

Changes 0.812 (3/23/11 @ 15:17 PST):

- /wxgo now works properly when traversing world bounderies. First we quickly pop into
  the default spawn location for the target world, then from there we go to our final
  destination. It is a hack, but it is a working hack. :)
  
- methodized the code to find closest stargates, and find distance from closest stargate
  blocks as well as the math to find distance.
  
- Updated block ignition events to only use proximity style checks. Block ignition event
  cancellation radius increased to active stargate woosh depth or 4 blocks, which ever is 
  further.
  
- Updated '/wxcompass' to use new FindClosestStargate method.

- Updated onEntityDamage to use only proximity style checks. On active gates a bubble of 
  no fire damage of either woosh_depth or 4 blocks, which ever is larger, is created. On
  closed gates a bubble of 2 blocks is created to stop fire ticks occuring right as a 
  gate closes. Stopped caring about potential drowning in stargate. If user decides they
  want to stand in the wrong side of a gate till they drown, that is their choice. 
  
- Re-added missing CONSTRUCT_NAME_TAKEN error string in ConfigManager. This stops an NPE
  in 'wxcomplete'.
  
- Added support for tkelly's Help plugin. Will generate proper config based on permissions
  type (simple or complex) or lack of permissions plugin altogether. 

- Refactored the heck out of iConomy and Permissions support. Own classes in a new package
  to go along with the Help support. Methodized a bunch of useful functions. Less
  duplicated code.
  
- Added some log output for 'wxforce'. Should help combat abuse.

- Ops are now always able to use 'wxremove'.

- The '/wormhole simple' command now refreshes Help entries to the proper permissions after
  being set.


Changes 0.811 (3/21/11 @ 20:27 PST):

- Came up with a proximity based check for stargates in the lava & fire event
  cancellation code. Now only 1 block radius around active lava portals
  gets its lava & fire events cancelled. STATIONARY_LAVA is safe for players
  to use in portals now. For reals.
  
- Version 4.5 of iConomy is now supported and verified as working.

- Now we actually check for Iris on gate use while in minecart...

- Back to the good ol kick the player out of the cart and stuff them through
  the stargate method. Doing a bit of a hackish teleport when going between 
  worlds as well. We tp to spawn, then instantly to destination. This is only
  when starting the tp while in minecart. If minecart is empty and passing
  into a stargate that will traverse worlds, we kick the minecart back. Otherwise
  it will dissapear into the void. 
  
- Now we cancel block ignite events on a proximity basis, same way we cancel 
  fire and lava events on player. No more trees bursting into flames near a stargate.
 

Changes 0.810 (3/20/11 @ 00:18 PST):

- Broke '/wxcompass' out into its own class. Removed '/wormhole compass'.

- Broke '/wxcomplete' out into its own class. Removed '/wormhole complete'.

- Broke '/wxidc' out into its own class.

- Broke '/wxremove' out into its own class. Removed '/wormhole remove'. 
  Fixed so it toggles iris to off state before removing gates with iris 
  active.
  
- Broke '/wxlist' out into its own class. Added no permissions error message.
  Removed from '/wormhole' command.

- Added command '/wxgo' and broke it out into its own class. Added no permissions 
  error message. Removed from '/wormhole' command.

- Broke '/dial' out into its own class.

- Broke '/wxbuild' out into its own class. 

- Broke '/wormhole' out into its own class.

- Added another message for active gates. Now it will say either remote activated, or 
  activated by someone else already. 

- Added SIMPLE_PERMISSIONS config option. The default value of 'false' makes permissions
  node settings use complex mode. While the setting of true sets the plugin to check for 
  extremely simplified permissions. Permission node details can be found in the README.
  
- Refactored the WXForce class to Force. Hopefully this shuts MSSE up. ^^;

- Moved a bunch of the initial loading out of onEnable and into onLoad. 
  Now we use onEnable only for events that should only happen at plugin Enable.
  
- Updated '/wormhole' command to have more descriptive errors and built in help. 
  Updated help information for this command as well. Command now has unified messaging
  string headers. Added new 'simple' option to enabling simple permissions while the game
  is live. Requires the user to have proper permissions node for configuration in target
  mode. Removed a bunch of duplicated permissions checks. Only one check is needed at 
  beginning of command call now. 
  
- Revamped readme to reflect important recent plugin package changes.

- Fire damage, combustion damage, and drown events now canceled in stargate. Now LAVA is 
  really a valid portal material. 
  
- Creeper explosions are now canceled when they would cause damage to stargates. This will
  stop signs and buttons from being destroyed during that mad dash to/from a stargate. ^^
  

Changes 0.801 (3/15/11 @ 22:33 PST):

- Update to the way data is pushed to signs in gate destruction and creation.
  Causes signs to update visually more reliably.
  
- Removed NPE during removal of sign gate if current sign gate's target doesn't
  have a gate target. 
  
- Initial addition of '/wxforce <gate|drop>' command, used to globally close all 
  gates and/or drop all irises temporarily (until they are dialed again). 
  Uses the 'wormhole.config' or 'wormhole.remove.all' permission nodes.
  
- Fixed '/wxremove' so that the permissions check doesn't fall through to the built
  in permissions check. :|
  
- Fixed permissions surrounding gate networks and WORMHOLE_USE_IS_TELEPORT

Changes 0.800 (3/9/11 @ 23:33 PST):

- Added pretty format messages! [dh/gyoza]

- Revamped the wormhole list and how it displays items. 

- Wormhole use cost of 0.0 no longer tells users that they were charged 0.0 when 
  using a gate. Also no longer bothers doing the iConomy calls with a 0.0 value.
  
- /wxbuild (/wormhole build) no longer blindly calls for permissions. This removes
  an NPE.
  
- /wxcompass (/wormhole compass) now has a permissions node. 'wormhole.use.compass'.
  Ops also can use the compass by default.

- New config value "WORMHOLE_USE_IS_TELEPORT"
    * Default is false (which doesn't change anything) (wormhole.use means a user
      can activate a gate, but others can still teleport form an active gate)
    * If set to true then users without wormhole.use will be unable to activate
      a gate OR TELEPORT from a gate.

- Fixed the gate active but no teleport bug (for real). 

- Fixed Iris to auto-open when dialing out. 
    * Dial gates iris will stay closed until actually connected.

- /wxcomplete properly checks for 'wormhole.network.build.NETNAME' permissions, 
  if permissions are enabled. 

- /dial now checks for 'wormhole.network.use.NETNAME' permissions if permissions 
    are enabled. The network 'Public' is always assumed to be just that. Public.
  
- /dial now properly kills timers associated with start gate when failing a dial.
  Instead of just the lights going out, and everything waiting for timers to finish.

- /wormhole go now has the permissions node 'wormhole.go'

- Check for WORMHOLE_USE_IS_TELEPORT in conjunction with 'wormhole.network.use.*'
  permissions node to disallow users who don't meet permissions requirements.

- Check for 'wormhole.network.use.*' permissions node on stargate activation 
  button/lever toggle.
  
- LAPIS_BLOCK is now an allowed Iris material.

- Properly tag gate sign dial signs with network gate was on at removal/break time.

- New command "/wxidc <gatename> <optional_set_idc>". The set can be "-clear" which 
  will clear the IDC. This command is available to OPs, wormhole.config, the console, 
  and the owner of the gate.


Changes 0.755 (3/4/11 @ 16:51PST):

- Added /wxbuild, /wxlist, and /wxremove commands as short form of their /wormhole 
  counterparts.
  
- Added /wxcompass and /wxcomplete.

- /wormhole complete and /wxcomplete optional arguments require key=value
  * To add IDC you do idc=<value>
  * To add a network you would do net=<value>
  * Example: /wxcomplete MyGate idc=Haha net=Awesome

- Fixed bug in database code which was pushing data to wrong fields.

- Minor rework in PlayerListener code pretaining to players entering stargates.

- No longer scream about iConomy 4.2 or 4.3 being unsupported.

- No longer scream about Permissions 2.5.x being unsupported.

- Reduced potential thread safety issue when accessing Iconomy.

- Lots of logging added at Level.FINE and Level.FINEST for stargate operations. 
  Most useful for debugging.
  
- Closed a potential file descriptor leak in configuration code.



Changes 0.754 (3/3/11 @ 00:54 PST):

- Iris activation levers are now destroyed when a stargate is removed. Also if
  anything is in the iris activation lever block location when creating an 
  ICD protected gate it will be destroyed properly before lever is placed.
  
- We now properly destroy all name signs before replacing them with new name sign.
  Was not checking before causing a NPE. 

- Fixed '/wormhole build <gateshape>' to use the proper argument for <gateshape>
  This of course means that users with 'wormhole.build' permissions can use 
  '/wormhole build <gateshape>' after building a DHD, and press the button to 
  instantly generate a StarGate in the shape specified.
  
- Levers got the same treatment as signs now. No more wacky floating levers on
  idc enabled gates. Lever creation code broken out into own method. Stargate
  regeneration command is going to use this.

Changes 0.753 (3/2/11 @ 19:27 PST):

- Fixed Gate Sign placement. Now no longer at right angles to the gatesign block.

- Updated serverListener onPluginEnabled checks for iConomy and Permissions to
  only go off if the plugin is not already bound to. No more multiple
  notifications about attaching to Permissions. Also fixed a minor casting issue
  in the Permissions plugins attach section of onPluginEnabled. No more casting 
  error.
  
- Error messages for onEnable checks for iConomy and Permissions should be a bit 
  useful now as we may have been loaded before Permissions.

Changes 0.752 (2/28/11 @ 20:57 PST):

- Initial iConomy 4.1 Support 

- Initial Permissions 2.5 Support (should just be drop in)

- Fixed Stargate destruction detection. Removed blockDamageEvent detection and
  added blockBreakEvent detection in its place.

- Removed dead/unused code.

Changes 0.751 (2/25/11 @ 07:53 PST):

- Initial support for iconomy 3.0

Changes 0.750 (2/22/11 @ 22:19 PST):

- Major refactoring and package name changes.

- Initial support for minecraft 1.3.

 
Changes 0.741 (2/21/11 @ 21:48 PST):

- Stopped using playerListener for commands. Use the new onCommand structure. 
  This puts us as fully onCommand compliant for when they decide to put nags 
  about how horrible the coders are who are using the examples previously given 
  to them by bukkit. ^^
  
- Bumped up our BLOCK_PHYSICS and BLOCK_FLOW priorities to Highest. When other 
  plugins cancel these for us really bad things happen. (NPE)
  Bumped our PLAYER_MOVE up to High. Once again, other plugins canceling these 
  events causes us to break in most interesting ways. (NPE)
  
- Stopped listening on PLAYER_QUIT. We never did anything with it anyways. 
  No need to hold the resources.
  
- getLogLevel() added to ConfigManager for getting Log Level from the config. 
  getLevel() added to Settings for pulling the Level data from the ConfigKeys.



Changes 0.740 (2/21/11 @ 05:45 PST):

- Initial revamp of config system. Now with 100% less chances of a dereference 
  based NPE. EVERYTHING is checked for a null. Hard coded defaults. Will update
  this to use the defaults used to generate default conf file next config push.
  
- Minor logic changes in block listener code.

- Fixed sign not being breakable? Again?

- Broke DeleteBlocks() out into DeleteGateBlocks(), DeletePortalBlocks(), 
  DeleteNameBlock(), and DeleteTeleportSignBlock(). Allows use of these 
  functions in other commands individually.
  
- Added DeleteNameSign() for deleting the name sign. This gets called when using
  "/wormhole remove" and when destroying the gate by hand. No more magic free 
  signs when destroying stargates. Still no cure for free signs when destroying
  just the Name sign.
  
- DeleteTeleportSign() and ResetTeleportSign() added. Delete nukes the sign 
  altogether. Reset sets the name on it back to the old name of the Stargate and
  wipes all other lines of text. No more gates accidentally named -gatename-.


Changes 0.736 (2/20/11 @ 03:20 MST)
- Added configurable WOOSH_DEPTH for custom gate shapes.
- Updated to work properly with latest bukkit onEntityDamage changes.
- Stargates should no longer linger in half living states after a server shutdown while stargates are active.
  On onDisable we close all gates properly. onEnable we check and close gates again, just in case.
- Woosh Depth changes require user to remove one stargate and re-add it to set the woosh_depth properly. Any attempt to start up a stargate
  before doing this will cause a NPE. Also recommended users update their .shape files with 'WOOSH_DEPTH=3', or something similar, before doing this 
  (or conversely, remove their GateShapes folder).
- Fixed stray permission 'wormhole.use' which was causing problems. Permission was broken into two permissions few releases back. 
  'wormhole.use.dialer' and 'wormhole.use.sign' or 'wormhole.use.*' Also made it so players without 'wormhole.use.sign' can not change
  wormhole sign destinations.

Changes 0.735 (2/19/11 @ 03:40 PST)
- Modified Standard.shape to have 7 chevrons that light up.
- Modified shape parsing code to support an [O:E:L:S] block in the gate design.
- Rewrote logger setup. Now there is a config option for LOG_LEVEL. Uses Java logging.Level log levels.
  Only directly effects the server log file. Allows for some extra debugging of gate shapes. Defaults to INFO. 
  Directly effects the minimum level of logging in Bukkit, which at current is set to 'null'. Should have no effect on
  anything else. This is only able to be set at startup time.
- Updated gate destruction mechanics so if the gate is in a lit state but not portaling when it is destroyed, it flips back to
  an off visual state and disables all times associated with the gate. The act of turning off the lighting means that if the block
  that was destroyed was a lit block, it will be replaced with the initial material.
- DHD no longer lights up thus allowing the DHD to be properly destroyed allowing for one way gates.
- General code cleanups.
- Updated gate splash effect to use whatever PORTAL_MATERIAL is set to. Beware with STATIONARY_LAVA. It is LAVA. It hurts. BAD. Like REALLY BAD.
  BURNS BURNS BURNS. You have been WARNED. 
- Consider this build a Beta? 

Changes 0.730 ( 2/16/11 @ 20:40 MST)
- Added custom gate shapes!
      After starting server there should be a new directory and file plugins/WormholeXTreme/GateShapes/Standard.shape
      You can look in that file to see how to make custom gates.
- Flipping the Iris switch on a gate that is locked but not active will no longer create a false event horizon.
- The DHD on outbound dialing non-signed gates activates and deactivates properly with lightstone block effect and proper messages again.
  No more instant re-activating, must DHD must be deactivated first (or time out) before reactivation. 
- Small code cleanups and dead code removal (or commenting)
- Added '/wormhole irismaterial' command and associated it with the 'wormhole.config' permission.
  Valid materials are: STONE, DIAMOND_BLOCK, GLASS, IRON_BLOCK, BEDROCK. This is a global command. 
- Fixed gate light deactivation in conjunction with the inactive timer and the /dial command.
- Added 'wormhole.list' permissions node. 
- New gate design Minimal
- Added initial gate shape debugging output. 
- Added optional extra paramater to remove - /wormhole remove <name> all (the all is optional)
        If 'all' is specified at the end, the remove will also remove all blocks associated with the gate (other than the DHD)

Changes 0.727 ( 2/16/11 @ 13:39 PST)
- Made gate connection logic a bit more reliable with regards to scheduling system.
  Gates Now will never open in a half working state. If one doesn't open, neither will stay open.
  If scheduling for timed gate closings fails, try again, if that fails cry in the log and don't open 
  infinite time wormhole.
- Fixed iris causing inability to use a gate due to lack of wormhole event horizon (water) which is 
  destroyed by the iris closing/open
- Unstable wormholes event horizons are contained by Titanium/Trinium iris. (No splash/woosh through iris)
- Iris material now user configurable via Settings.txt. Defaults to STONE.
- Iris now unable to be broken, even if player is able to destroy wormhole. Use the lever to remove the iris.
  This stops accidental stargate breaking.
- Stargate will now deactivate and drain if it is active when any of its blocks are destroyed. This should stop the flooding issue.
In Progress/Partially working:
- Debug logs have been added for the gate scheduling system and will be added for most major break points. 
  Logs will take configuration setting allowing user to set the level of logging from the config file.
  Currently prettyLog only understands info, warning, and critical. Any call to it for anything else 
  like using 0 or 4 or 400 will result in an info log.
- Changed permissions for wormhole use and removal:
    Note : this means that you *MUST* change permissions or it won't work!
    wormhole.use.sign - lets a user use sign gates.
    wormhole.use.dialer - lets a user use /dial gates
    wormhole.remove.own - lets a user remove a gate that they own.
    wormhole.remove.all - lets a user remove any gate
- Woosh has been added back into the plugin
    There is a new configuration value that lets you disable this if desired.    

Changes 0.726 ( 2/15/11 @ 05:40 PST) 
- Log output has been totally revamped. Now it should be easier to tell what we are doing in the logs.
- Fixed the ability to use the craftbukkit /reload command without giving an NPE.
- Removed a few potential file descriptor, memory, and database performance leaks.


Changes 0.725 ( 2/13/11 @ 9:15PM MST)
- Iris and IDC is now completed for non-sign gates!
- When completing the gate you use /wormhole complete <name> <idc> to set the iris deactivation code.
- A lever will appear below the activation button.
- Pressing the lever will toggle the Iris on and off.
- When the Iris is active people will be unable to come through the gate!
- When dialing a remote gate you can optionally type "/dial <name> <idc>" if the IDC is correct you will deactivate the remote iris.
- Gates will not light up when active.
- Using double quotes in commands now works!
	Examples:
	/wormhole complete "A Fun Gate"
	/dial "A Fun Gate"
	/wormhole remove "A Fun Gate"

Changes 0.71(2/12/11 @ 10:42PM MST)
- Fixed an error message to be more specific (when trying to dial from an activated gate).
- Fixed problems with TickNextTick exception (needed to use sync instead of async).
- This may cause more issues though until the underlying issue is fixed in bukkit.
- This should be *more* stable than what was done before, but isn't guaranteed to be 100% perfect.
  Edit: Looks like the fix has been pulled into the repo - just need the next build and we should be good!
- Hitting the activate button again after you have previously hit it, but before you dial something will now 'deactivate' the gate.
- Due to these big issues the handling of double quotes in names has been pushed off for another day or two, sorry for everyone with that issue!

Changes 0.70 (2/12/11 @ 4:10AM MST)
- Fixed multi-worlds!!!! GO AND EXPLORE THE MULTIVERSE!
- TIMEOUT_SHUTDOWN now works properly. Feel free to set this to something other than 0!!
- Gates now have owners
- First thing I am doing with owners is allowing owners to charge a percent of the iConomy cost
- After running this new version once you will see a new configuration value available.
- Settings are no longer overwritten on version upgrade 
- Logging is now done properly thanks to Alron @ github.
- There are some other small fixes I just don't remember them all right now.

Changes 0.67 (2/7/11 @ 6:57PM MST)
- Version 0.66 is dumb, so I had to fix it up.
- Fixed the saving bug.
- Fixed the "gate timed out" message from repeating. FINALLY!!!
- You really want to get this version. It is much better than 65 and 66

Changes 0.66 (2/7/11 @ 3:31PM MST)
- It just isn't a release without a bug....
- This release fixes a small bug from the last release where wormholes fail to save properly after shutting down the server.
- You DO NOT WANT TO UPGRADE TO THIS!!!!

Changes 0.65 (2/7/11 @ 12:10PM MST)
- Wormhole now supports multiple worlds! (and works for the newest bukkit builds). Requires craftbukkit version 271+
- Wormhole sign targets are now stored across restarts
  This means that if you target a gate at a gate via the sign, then destroy the sign, the gate will always target the last targetted gate (Across restarts!)
- Wormholes that are active on server restart will remain active when restarted.
- IDC(Iris Deactivation Code)s now work! (only for non-sign gates)
  When creating a gate you can type /wormhole create <name> <idc>
  To dial a gate with an IDC you type /dial <name> <idc>
  Currently if there is an IDC set it will always be active (later you will be able to disable).
- Network can now be specified for a sign gate!
  When creating a signed gate the first line is the gate name, the second is the network name.
  If nothing is put in second line gates will default to the "Public" network.
  The sign will only cycle through gates with the same network !

Changes 0.62 ( 2/5/11 @ 10:37AM MST)
- Fixed being unable to dial after newly creating a non-sign gate.

Changes 0.61 ( 2/4/11 @ 3:41PM MST)
- Stupid copy/paste on an error loading iConomy fixed.

Changes 0.60 ( 2/4/11 @ 3:02PM MST)
- Added configuration file
  Restart the server once and the file will be created, including your old settings.
  Changes to configuration require restart to go into effect (of course)
  Any changes made while the server is running will be written to the file on shutdown.
- Improved performance over previous fix for CraftBukkit.
- Fixed a few small issues
- Sign dialer should now be set and no longer have "No Other Gates" after a restart.
- Chunks should now be saved when server is shutdown 
- Download for jar file is now available at GitHub as per requested by several users.
  This is the jar file only!
- iConomy support!!!!
  Configuration file will have the values for this:
  Use cost: how much it costs to use a wormhole (cost to actually teleport, activating the gate is free. This should stop people from running into a gate someone else opened.)
  Build cost: How much it costs to build a wormhole.
  Ops Exempt: if set to true Ops will not be charged to use/build gates.
  I can add/change configurations as needed, but hopefully this is a good start.

Changes 0.59 ( 2/2/11 @ 12:07AM MST)
- Quick patch to fix the issues with the newest version of CraftBukkit (231)

Changes 0.55 ( 2/1/11 @ 1:10PM MST)
- Fixed some debug messages that shouldn't have been left in.
- Added /wormhole compass (Make compass point to nearest wormhole)
  Typing again will recalculate nearest wormhole.
In Progess:
- iConomy will be the next release, I just needed to remove those debug messages.

Changes 0.51 ( 1/31/11 @ 11:22AM MST)
- Fixed the spamming of timeout message.
- Added config "/wormhole activate_timeout" to change the default timeout after activating a wormhole before it dials.
- Changed config name of timeout "/wormhole timeout" to "/wormhole shutdown_timeout"
  So now there is the activation timeout (activate_timeout) and the timeout after dialing when the gate needs to shutdown (/wormhole shutdown_timeout).
  Default value for shutdown_timeout is now 0 to reduce the instances of people falling through the earth.
- Added an OP only command (to go along with listing, you probably want to be able to see where the gate actually is)
  /wormhole go <NAME>
  This will instantly teleport you to the gate so know where it is.
  This was actually in 0.39 but I have been including the source in the JAR now and you can see my source at GitHub
  Feel free to comment and suggest changes in code if you want to.
  Feel free to also make changes on your own and send them to me via GitHub - I will integrate the changes if I like them!

Changes 0.50 ( 1/30/11)
- Minecarts now can go through wormholes.
  If a player is in the cart they will go through the gate but will not be in the cart when they arrive at the other side
  I would not recommend riding carts through the gate yet until I can figure out how to keep the player in the cart on the other side. Sometimes riding a cart through the gate results in weird behavior.
- Activated but not dialed gates now timeout after 60 seconds
- Fixed a bug with portal material of WATER (it can only be STATIONARY_WATER)
  It will automatically update any WATER to STATIONARY_WATER.
  I only added the STATIONARY_LAVA as a material on a whim - but when I found out people actually wanted to use it I tried to stop the damage but was unable.
  For now STATIONARY_LAVA is probably not your best option if you want to actually use the wormholes.
- Added command /wormhole list for Ops only. Lists all stargates on your server.
- Fixed a bug with portals being created out of thin air when you hit a button.
- Portals are now required to have AIR blocks for all blocks inside the gate when constructing.
- Possibly fixed issues with linux and DB
  changed the sql connection string to ./plugins/WormholeXTremeDB from plugins/WormholeXTremeDB
- I can't seem to find any issues with the newest craftbukkit (187)
Open issues:
- DHDs can't be repaired after removing a button/dialing sign on a sign-dialing gate (workaround is to /wormhole remove and then add the button/sign, and then it will function correctly.)

Changes 0.39 ( 1/27/11)
Added support for the Permissions plugin.
Without the plugin it defaults to the previous permission settings.
Changing the built in permissions will not change the Permissions plugin at all.
Permission nodes are as follows:
wormhole.use - Able to use wormholes
wormhole.build - Able to build new wormholes
wormhole.remove - Able to remove wormholes
wormhole.config - Able to configure settings like material and timeout. (By default Ops will be able to do this as well)
Fixed the weird names on the signs issue.
Part of fixing the falling through the world is pre-loading chunks
You will need bukkit v157 or newer!
Fixed a bug stopping the PORTAL material from working (Thanks Dinnerbone)
/wormhole timeout 0 should help STOP falling through the world.
I have tried to fix the point where you teleport when making a new gate. Hopefully this fixes it it.
Existing gates SHOULD start to work again unless you are really unlucky. If a gate just refuses to put you in the right place, a /wormhole remove <name> and then just add it again and it should be fine!

Changes 0.32 (1/26/11)
Again fixing small issue stopping gates from being built.

Changes 0.31 (1/26/11)
Forgot to change one last reference to /stargate (as all commands are now /wormhole)

Changes 0.3 (1/26/11):
Name change to "WORMHOLE EXTREME"!!!
To successfully use this rename and already had "Stargates" you will need to
Rename the "StargatesDB" and all files inside it to "WormholeXTremeDB"
Delete the old Stargates.jar
Fixed sign scrolling again.
Breaking the DHD will not remove the gate - it just makes it unable to dial out
Replacing the DHD will re-enable dialing.
Permissions are now fully working and stored
Use /wormhole perms for more detail
Configuration options are now available
/wormhole timeout (3-60) : # seconds to timeout wormhole
/wormhole material <MATERIAL> : Gets or sets your portal material (air, water, lava, etc)
Possible performance improvement using ConcurrentHashMap instead of locking and using HashMap.
Iris is still in progress 